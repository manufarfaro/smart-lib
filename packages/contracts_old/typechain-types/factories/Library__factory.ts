/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Library, LibraryInterface } from "../Library";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bookId",
        type: "uint256",
      },
    ],
    name: "AddBook",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "bookId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isFinished",
        type: "bool",
      },
    ],
    name: "SetFinished",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "string",
        name: "author",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isFinished",
        type: "bool",
      },
    ],
    name: "addBook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "bookList",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "year",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "author",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isFinished",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "bookOwners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFinishedBooks",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "year",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "author",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isFinished",
            type: "bool",
          },
        ],
        internalType: "struct Library.Book[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUnfinishedBooks",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "year",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "author",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isFinished",
            type: "bool",
          },
        ],
        internalType: "struct Library.Book[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bookId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isFinished",
        type: "bool",
      },
    ],
    name: "setFinished",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611284806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80636aa835a81461006757806376d9e5a014610083578063ad8514c4146100a1578063be8fd2ea146100d5578063c079766d14610105578063f2bc01ff14610121575b600080fd5b610081600480360381019061007c9190610c7c565b61013f565b005b61008b61029f565b6040516100989190610ebf565b60405180910390f35b6100bb60048036038101906100b69190610c53565b6102b0565b6040516100cc959493929190610f0a565b60405180910390f35b6100ef60048036038101906100ea9190610c53565b610413565b6040516100fc9190610e7b565b60405180910390f35b61011f600480360381019061011a9190610bc0565b610446565b005b6101296105e2565b6040516101369190610ebf565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff166001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561029b5780600083815481106101e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906005020160040160006101000a81548160ff0219169083151502179055507fa4f349f92993cc89f62be8c4bead1bd7d76d2e9c4d05da59739c6e0dd75f042c8260008481548110610265577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906005020160040160009054906101000a900460ff16604051610292929190610ee1565b60405180910390a15b5050565b60606102ab60016105f3565b905090565b600081815481106102c057600080fd5b90600052602060002090600502016000915090508060000154908060010180546102e9906110bf565b80601f0160208091040260200160405190810160405280929190818152602001828054610315906110bf565b80156103625780601f1061033757610100808354040283529160200191610362565b820191906000526020600020905b81548152906001019060200180831161034557829003601f168201915b50505050509080600201549080600301805461037d906110bf565b80601f01602080910402602001604051908101604052809291908181526020018280546103a9906110bf565b80156103f65780601f106103cb576101008083540402835291602001916103f6565b820191906000526020600020905b8154815290600101906020018083116103d957829003601f168201915b5050505050908060040160009054906101000a900460ff16905085565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008080549050905060006040518060a001604052808381526020018781526020018661ffff168152602001858152602001841515815250905060008190806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000015560208201518160010190805190602001906104d2929190610a45565b506040820151816002015560608201518160030190805190602001906104f9929190610a45565b5060808201518160040160006101000a81548160ff0219169083151502179055505050336001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f10545577c692a22f651e69221c47ad4418e40434b36f4e2411bc54007aa8cbb96001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040516105d2929190610e96565b60405180910390a1505050505050565b60606105ee60006105f3565b905090565b60606000808054905067ffffffffffffffff81111561063b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561067457816020015b610661610acb565b8152602001906001900390816106595790505b5090506000805b6000805490508110156109175760008082815481106106c3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600502016040518060a0016040529081600082015481526020016001820180546106f6906110bf565b80601f0160208091040260200160405190810160405280929190818152602001828054610722906110bf565b801561076f5780601f106107445761010080835404028352916020019161076f565b820191906000526020600020905b81548152906001019060200180831161075257829003601f168201915b5050505050815260200160028201548152602001600382018054610792906110bf565b80601f01602080910402602001604051908101604052809291908181526020018280546107be906110bf565b801561080b5780601f106107e05761010080835404028352916020019161080b565b820191906000526020600020905b8154815290600101906020018083116107ee57829003601f168201915b505050505081526020016004820160009054906101000a900460ff16151515158152505090503373ffffffffffffffffffffffffffffffffffffffff16600160008360000151815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156108aa575085151581608001511515145b1561090357808484815181106108e9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525082806108ff90611122565b9350505b50808061090f90611122565b91505061067b565b5060008167ffffffffffffffff81111561095a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561099357816020015b610980610acb565b8152602001906001900390816109785790505b50905060005b82811015610a39578381815181106109da577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151828281518110610a1b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508080610a3190611122565b915050610999565b50809350505050919050565b828054610a51906110bf565b90600052602060002090601f016020900481019282610a735760008555610aba565b82601f10610a8c57805160ff1916838001178555610aba565b82800160010185558215610aba579182015b82811115610ab9578251825591602001919060010190610a9e565b5b509050610ac79190610afc565b5090565b6040518060a00160405280600081526020016060815260200160008152602001606081526020016000151581525090565b5b80821115610b15576000816000905550600101610afd565b5090565b6000610b2c610b2784610f90565b610f6b565b905082815260208101848484011115610b4457600080fd5b610b4f84828561107d565b509392505050565b600081359050610b6681611209565b92915050565b600082601f830112610b7d57600080fd5b8135610b8d848260208601610b19565b91505092915050565b600081359050610ba581611220565b92915050565b600081359050610bba81611237565b92915050565b60008060008060808587031215610bd657600080fd5b600085013567ffffffffffffffff811115610bf057600080fd5b610bfc87828801610b6c565b9450506020610c0d87828801610b96565b935050604085013567ffffffffffffffff811115610c2a57600080fd5b610c3687828801610b6c565b9250506060610c4787828801610b57565b91505092959194509250565b600060208284031215610c6557600080fd5b6000610c7384828501610bab565b91505092915050565b60008060408385031215610c8f57600080fd5b6000610c9d85828601610bab565b9250506020610cae85828601610b57565b9150509250929050565b6000610cc48383610de0565b905092915050565b610cd581611027565b82525050565b6000610ce682610fd1565b610cf08185610ff4565b935083602082028501610d0285610fc1565b8060005b85811015610d3e5784840389528151610d1f8582610cb8565b9450610d2a83610fe7565b925060208a01995050600181019050610d06565b50829750879550505050505092915050565b610d5981611039565b82525050565b610d6881611039565b82525050565b6000610d7982610fdc565b610d838185611005565b9350610d9381856020860161108c565b610d9c816111f8565b840191505092915050565b6000610db282610fdc565b610dbc8185611016565b9350610dcc81856020860161108c565b610dd5816111f8565b840191505092915050565b600060a083016000830151610df86000860182610e5d565b5060208301518482036020860152610e108282610d6e565b9150506040830151610e256040860182610e5d565b5060608301518482036060860152610e3d8282610d6e565b9150506080830151610e526080860182610d50565b508091505092915050565b610e6681611073565b82525050565b610e7581611073565b82525050565b6000602082019050610e906000830184610ccc565b92915050565b6000604082019050610eab6000830185610ccc565b610eb86020830184610e6c565b9392505050565b60006020820190508181036000830152610ed98184610cdb565b905092915050565b6000604082019050610ef66000830185610e6c565b610f036020830184610d5f565b9392505050565b600060a082019050610f1f6000830188610e6c565b8181036020830152610f318187610da7565b9050610f406040830186610e6c565b8181036060830152610f528185610da7565b9050610f616080830184610d5f565b9695505050505050565b6000610f75610f86565b9050610f8182826110f1565b919050565b6000604051905090565b600067ffffffffffffffff821115610fab57610faa6111c9565b5b610fb4826111f8565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061103282611053565b9050919050565b60008115159050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156110aa57808201518184015260208101905061108f565b838111156110b9576000848401525b50505050565b600060028204905060018216806110d757607f821691505b602082108114156110eb576110ea61119a565b5b50919050565b6110fa826111f8565b810181811067ffffffffffffffff82111715611119576111186111c9565b5b80604052505050565b600061112d82611073565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156111605761115f61116b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61121281611039565b811461121d57600080fd5b50565b61122981611045565b811461123457600080fd5b50565b61124081611073565b811461124b57600080fd5b5056fea2646970667358221220ba9c3944baf56c0c9eabd4158a7ca31514dafe8150ca15b28226983b8b5fbc7b64736f6c63430008040033";

type LibraryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibraryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Library__factory extends ContractFactory {
  constructor(...args: LibraryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Library> {
    return super.deploy(overrides || {}) as Promise<Library>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Library {
    return super.attach(address) as Library;
  }
  override connect(signer: Signer): Library__factory {
    return super.connect(signer) as Library__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibraryInterface {
    return new utils.Interface(_abi) as LibraryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Library {
    return new Contract(address, _abi, signerOrProvider) as Library;
  }
}
